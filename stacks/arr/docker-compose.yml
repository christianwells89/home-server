version: "3.8"

services:
  transmission:
    image: haugene/transmission-openvpn:4.3.2
    container_name: transmission
    environment:
      - OPENVPN_PROVIDER=PIA
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      # Not entirely necessary with traefik exposing it, but keeping in case that goes does down
      # This is only to allow a hole in the VPN for these IP addresses to access the web ui
      - LOCAL_NETWORK=192.168.86.0/24
      - TRANSMISSION_WEB_UI=flood-for-transmission
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
    volumes:
      # This doesn't need the whole media folder, but it reports its download locations to the others and they
      # interpret as if it's the same in their container so it's easier if they all just match
      - /data/arr/media:/data
      - /data/arr/transmission/config:/config
    ports:
      - 7878:7878 # radarr
      - 8989:8989 # sonarr
      - 8686:8686 # lidarr
      - 8090:8090 # mylar
      - 9696:9696 # prowlarr
      - 9091:9091
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    logging:
      driver: json-file
      options:
          max-size: 10m
    networks:
      - proxy
    security_opt:
      - no-new-privileges:true
    labels:
      my.zone: home-server
      traefik.enable: true

      traefik.http.routers.transmission.rule: Host(`transmission.${SERVER_DOMAIN}`)
      traefik.http.routers.transmission.entrypoints: web
      traefik.http.routers.transmission.service: transmission
      traefik.http.services.transmission.loadbalancer.server.port: 9091

      traefik.http.routers.radarr.rule: Host(`radarr.${SERVER_DOMAIN}`)
      traefik.http.routers.radarr.entrypoints: web
      traefik.http.routers.radarr.service: radarr
      traefik.http.services.radarr.loadbalancer.server.port: 7878

      traefik.http.routers.sonarr.rule: Host(`sonarr.${SERVER_DOMAIN}`)
      traefik.http.routers.sonarr.entrypoints: web
      traefik.http.routers.sonarr.service: sonarr
      traefik.http.services.sonarr.loadbalancer.server.port: 8989

      traefik.http.routers.lidarr.rule: Host(`lidarr.${SERVER_DOMAIN}`)
      traefik.http.routers.lidarr.entrypoints: web
      traefik.http.routers.lidarr.service: lidarr
      traefik.http.services.lidarr.loadbalancer.server.port: 8686

      traefik.http.routers.mylar.rule: Host(`mylar.${SERVER_DOMAIN}`)
      traefik.http.routers.mylar.entrypoints: web
      traefik.http.routers.mylar.service: mylar
      traefik.http.services.mylar.loadbalancer.server.port: 8090

      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${SERVER_DOMAIN}`)
      traefik.http.routers.prowlarr.entrypoints: web
      traefik.http.routers.prowlarr.service: prowlarr
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696

  radarr:
    image: lscr.io/linuxserver/radarr:4.2.4
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /data/arr/media:/data
      - /data/arr/radarr/config:/config
    restart: unless-stopped
    network_mode: service:transmission
    depends_on:
      - transmission
    security_opt:
      - no-new-privileges:true

  sonarr:
    image: lscr.io/linuxserver/sonarr:3.0.9
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /data/arr/media:/data
      - /data/arr/sonarr/config:/config
    restart: unless-stopped
    network_mode: service:transmission
    depends_on:
      - transmission
    security_opt:
      - no-new-privileges:true

  lidarr:
    image: lscr.io/linuxserver/lidarr:1.0.2
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /data/arr/media:/data
      - /data/arr/lidarr/config:/config
    restart: unless-stopped
    network_mode: service:transmission
    depends_on:
      - transmission
    security_opt:
      - no-new-privileges:true

  mylar:
    image: lscr.io/linuxserver/mylar3:0.7.0
    container_name: mylar
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
     - /data/arr/mylar/config:/config
     - /data/arr/media/Comics:/comics
     - /data/arr/media/downloads/completed/comics:/downloads
    restart: unless-stopped
    network_mode: service:transmission
    depends_on:
      - transmission
    security_opt:
      - no-new-privileges:true

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:0.4.9-develop
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /data/arr/prowlarr/config:/config
    restart: unless-stopped
    network_mode: service:transmission
    depends_on:
      - transmission
    security_opt:
      - no-new-privileges:true

networks:
  proxy:
    name: home-server
    external: true